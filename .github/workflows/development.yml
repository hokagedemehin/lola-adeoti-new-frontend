# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: 📍 Pull Request Action

on:
  # push:
  #   branches: [main]
  pull_request:
    # branches: [main]
    types:
      - opened
      - edited
      - synchronize
      - reopened
    # workflow_call:

jobs:
  # build:
  #   name: '🏗 Build Application'
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       node-version: [16.x]
  #   # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

  #   steps:
  #     - name: '☁ checkout repository'
  #       uses: actions/checkout@v2

  #     - name: '💾 Use Node.js 16'
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{matrix.node-version}}
  #         cache: 'yarn'
  #     # - run: yarn build

  #     - name: '📃 Install dependencies'
  #       uses: bahmutov/npm-install@v1.6.0
  #     # - run: yarn install

  #     # - name: 🏁 Yarn build if cache is stale
  #     #   run: yarn build

  # - name: Get yarn cache directory path
  #   id: yarn-cache-dir-path
  #   run: echo "::set-out name=dir::$(yarn cache dir)"

  #     - name: 🚧 Start Caching Build
  #       # uses: c-hive/gha-yarn-cache@v2
  #       uses: actions/cache@v2
  #       id: yarn-caches
  #       with:
  #         # path: |
  #         #   ~${{ github.workspace }}/.next/cache
  #         path: |
  #           ~/.npm
  #           ${{ github.workspace }}/.next/cache
  #         # path: /home/runner/.cache/yarn/v6
  #         key: ${{runner.os}}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-

  #     - name: Generate new build
  #       # if: steps.yarn-caches.outputs.cache-hit != 'true'
  #       run: yarn build

  #     # - name: 🏁 Yarn build if cache is stale
  #     #   run: yarn build

  #     # - name: 🌩 Upload artifact
  #     #   uses: actions/upload-artifact@v3
  #     #   with:
  #     #     name: build-artifact
  #     #     path: |
  #     #       ~/.yarn
  #     #       ${{ github.workspace }}/.next/cache
  #     #     if-no-files-found: ignore

  # Full project Linting
  lint:
    name: 🖌 Project Lint
    runs-on: ubuntu-latest

    steps:
      - name: 🌥 checkout repository
        uses: actions/checkout@v2

      - name: 🖥 Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: yarn
      # - run: yarn install

      - name: '📃 Install dependencies'
        uses: bahmutov/npm-install@v1.6.0

      # - run: yarn build

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: new-${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            new-${{ runner.os }}-yarn-
      - name: run this build if there is none
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn build
      - name: 🌌 Lint Check on all Files
        run: yarn lint
  # Cypress testing
  test:
    name: 🩺 Cypress Testing Phase
    runs-on: ubuntu-latest
    needs:
      - lint
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: ⛅ checkout repository
        uses: actions/checkout@v2

      - name: 🖥 Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: yarn
      #   - run: yarn install
      #   - run: yarn build

      # - name: 📩 Download Artifact
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: build-artifact

      - name: '📃 Install dependencies'
        uses: bahmutov/npm-install@v1.6.0

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-out name=dir::$(yarn cache dir)"

      - name: 🚧 Start Caching Build
        uses: actions/cache@v2
        id: yarn-caches
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: new-${{runner.os}}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            new-${{ runner.os }}-yarn-

      # - name: 🏁 Yarn build if cache is stale
      #   run: yarn build
      - name: 🧪 Run all tests
        uses: cypress-io/github-action@v2
        with:
          browser: chrome
          headless: true
          # build: yarn build
          start: yarn start
          wait-on: http://localhost:3000

  #     # - name: 🌠 Display structure of downloaded file
  #     #   run: ls -R

  # steps:
